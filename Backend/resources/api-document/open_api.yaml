openapi: 3.0.0
info:
  version: 1.0.0
  title: IMS Platform
  description: This is the RESTfull API specification for the IMS platform which is developed for the Faculty of Information technology.

paths:
  /students:
    get:
      description: Get all students
      parameters:
        - in: query
          name: isSelected
          description: To get selected students specificaly..
          required: false
          schema:
            type: string
        - in: query
          name: companyName
          description: To get studentList for specific company
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response(Success).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "401":
          description: Authorization failure(Unauthorized).
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "404":
          description: Students not found(Not Found).
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "500":
          description: Server error(Internal Server Error).
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
    post:
      description: Create a student.
      requestBody:
        description: Add students to database
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
      responses:
        "201":
          description: Successfull Created(Created).
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Student"
        "401":
          description: Authorization failure(Unauthorized).
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "406":
          description: Inputs are not acceptable(Not acceptable).
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "500":
          description: Server error(Internal Server Error).
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
  /student/{student-id}:
    get:
      description: Returns a single student
      parameters:
        - in: path
          name: student-id
          description: details of student to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response(Success).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "401":
          description: Authorization failure(Unauthorized).
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "404":
          description: Student not found(Not Found).
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "500":
          description: Server error(Internal Server Error).
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
    put:
      description: update a student
      parameters:
        - name: student-id
          in: path
          description: details of student to return
          required: true
          schema:
            type: string
      requestBody:
        description: update Student object that needs to be added to the db
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
      responses:
        "200":
          description: Successful response (Success).
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "401":
          description: Authorization failure(Unauthorized).
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "404":
          description: Student not found(Not Found).
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "406":
          description: Student not acceptable(Not Acceptable).
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "500":
          description: Server error(Internal Server Error).
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
    delete:
      description: Delete a student
      parameters:
        - name: student-id
          in: path
          description: details of student to return
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Student not found
  /Students/graph:
    get:
      description: Get student Counts
      parameters:
        - in: query
          name: isSelected
          description: To get selected students specificaly..
          required: false
          schema:
            type: string
        - in: query
          name: isFormSubmitted
          description: To get students who have completed personal details specificaly..
          required: false
          schema:
            type: string

      responses:
        "200":
          description: Successful response(Success).
          content:
            application/json:
              schema:
                type: integer
        "500":
          description: Server error(Internal Server Error).
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "404":
          description: students not found
  /Student/{student-id}/feedback:
    post:
      description: Create feedback
      parameters:
        - name: student-id
          in: path
          description: details of student to return
          required: true
          schema:
            type: string
      requestBody:
        description: Add feedback to database
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Feedback"
      responses:
        "201":
          description: Successful response(Success).
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Feedback"
        "405":
          description: Invalid input
    get:
      description: Get all feedback from students
      parameters:
        - name: student-id
          in: path
          description: details of student to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response(Success).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feedback"
        "404":
          description: Application not found(Not Found).
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "500":
          description: Server error(Internal Server Error).
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
  /Student/{student-id}/feedback/{feedback-id}:
    get:
      description: Returns a single feedback from a student.
      parameters:
        - name: student-id
          in: path
          description: Details of student to return.
          required: true
          schema:
            type: string
        - name: feedback-id
          in: path
          description: Feedback of student to return.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feedback"
        "400":
          description: Invalid data supplied
        "404":
          description: Feedback not found(Not Found).
          content:
            application/json:
              schema:
                type: string
                description: Reason

components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: string
        batchId:
          type: integer
        fullName:
          type: string
        nameWithInitials:
          type: string
        isSelected:
          type: boolean
    Batch:
      type: object
      properties:
        batchId:
          type: integer
        Description:
          type: string
        year:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        allowedCompanyCount:
          type: integer
    Feedback:
      type: object
      properties:
        feebackId:
          type: integer
        studentId:
          type: string
        companyId:
          type: string
        startDate:
          $ref: "#/components/schemas/Date"
        projectBrief:
          type: string
        mentor:
          $ref: "#/components/schemas/Mentor"
        isGivenAdequateWork:
          type: string
        workEnvironment:
          type: string
        employeeSupportiveness:
          type: string
        managementSupportiveness:
          type: string
        countSeniorSoftwareEngineerOrHigh:
          type: integer
        isPayed:
          type: boolean
        payment:
          type: integer
        problems:
          type: string
        suggesions:
          type: string
        overallComment:
          type: string
        Satisfaction:
          type: string
          enum:
            - "High"
            - "Medium"
            - "Low"
        isRecomended:
          type: boolean
        contactPerson:
          $ref: "#/components/schemas/Mentor"
    Mentor:
      type: object
      properties:
        name:
          type: string
        phoneNumber:
          type: integer
        email:
          type: string
        designation:
          type: string
    Date:
      type: object
      properties:
        year:
          type: integer
        month:
          type: integer
        day:
          type: integer
